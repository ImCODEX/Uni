     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 614162423225784D            s db 'a', 'A', 'b', 'B','2','%','x','M' ; declararea sirului initial s
    14                                  	l equ $-s ; stabilirea lungimea sirului initial l
    15 00000008 00<rept>                	d times l db 0 ; rezervarea unui spatiu de dimensiune l pentru sirul destinatie d si initializarea acestuia
    16                                  ; our code starts here
    17                                  segment code use32 class=code
    18                                      start:
    19 00000000 B908000000                      mov ecx, l ;punem lungimea in ECX pentru a putea realiza bucla loop de ecx ori
    20 00000005 BE00000000                      mov esi, 0   
    21 0000000A BF00000000                      mov edi, 0
    22 0000000F B341                            mov bl, 'A' 
    23 00000011 E314                            jecxz Sfarsit      
    24                                          Repeta:
    25 00000013 8A86[00000000]                      mov al, [s+esi]
    26 00000019 28C3                                sub bl, al     
    27 0000001B 7207                                JNAE sare
    28 0000001D 8887[08000000]                          mov [d+edi], al
    29 00000023 47                                      inc edi
    30                                              sare:
    31 00000024 46                                  inc esi
    32 00000025 E2EC                            loop Repeta
    33                                          Sfarsit:;terminarea programului
    34 00000027 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    35 00000029 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
