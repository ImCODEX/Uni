     1                                  ; Scrieți un program în limbaj de asamblare care să rezolve expresia aritmetică, considerând domeniile de definiție ale variabilelor
     2                                  ; a,b,c - byte;
     3                                  ; 3*[20*(b-a+2)-10*c]/5 ;  ex: a = 50 , b= 100 ; c = 25 => 3*[20*(100-50+2)-10*25)/5 = 3*[20*52 - 250]/5 = 3*[1040 - 250]/5 = 3*790/5 = 2370/5 = 474
     4                                  bits 32 ;asamblare si compilare pentru arhitectura de 32 biti
     5                                  ; definim punctul de intrare in programul principal
     6                                  global  start 
     7                                  
     8                                  extern  exit ; indicam asamblorului ca exit exista, chiar daca noi nu o vom defini
     9                                  import  exit msvcrt.dll; exit este o functie care incheie procesul, este definita in msvcrt.dll
    10                                          ; msvcrt.dll contine exit, printf si toate celelalte functii C-runtime importante
    11                                  segment  data use32 class=data ; segmentul de date in care se vor defini variabilele 
    12 00000000 32                      	a db 50
    13 00000001 64                      	b db 100
    14 00000002 19                      	c db 25
    15                                      
    16                                  segment  code use32 class=code ; segmentul de cod
    17                                  start: 
    18 00000000 A0[02000000]                mov al, [c]; mutam valoare lui c in AL
    19 00000005 B20A                        mov dl,10 ; DL = 10
    20 00000007 F6E2                        mul BYTE dl ;facem operatia AX = 10*c
    21 00000009 6650                        push ax ; punem ax in stiva
    22                                      
    23 0000000B A0[01000000]            	mov al, [b] ;punem valoarea lui b in AL 
    24 00000010 2A05[00000000]              sub al, [a] ; facem operatia AL = b -  a
    25 00000016 0402                        add al, 2 ; facem operatia AL = b - a + 2 
    26 00000018 B214                        mov dl, 20 ; DL = 20
    27 0000001A F6E2                    	mul BYTE dl ; AX = AL * DL
    28                                      
    29 0000001C 665B                        pop bx ;punem vechea valoare a lui ax ( 10*c ) in bx
    30                                      
    31 0000001E 6629D8                      sub ax, bx ;facem operatia AX = 20*(b-a+2)-10*c
    32 00000021 66BA0300                    mov dx,3
    33 00000025 66F7E2                      mul WORD dx; facem operatia DX:AX = 3*[20*(b-a+2)-10*c]
    34 00000028 66BB0500                    mov bx,5; BX = 5 
    35 0000002C 66F7F3                      div bx; facem operatia AX = DX:AX / BX = 3*[20*(b-a+2)-10*c]/5
    36                                      
    37                                      
    38                                  
    39                                  	
    40 0000002F 6A00                        push dword 0 ;se pune pe stiva codul de retur al functiei exit
    41 00000031 FF15[00000000]          	call [exit] ;apelul functiei sistem exit pentru terminarea executiei programului	
